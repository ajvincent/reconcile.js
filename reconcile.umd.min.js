'use strict';Object.defineProperty(exports,'__esModule',{value:true});function escape(s){var n=s;n = n.replace(/&/g,'&amp;');n = n.replace(/</g,'&lt;');n = n.replace(/>/g,'&gt;');n = n.replace(/"/g,'&quot;');return n;}function mapElements(nodes){var map={};var tags={};var node;var indices=[];for(var i=0,len=nodes.length;i < len;i++) {node = nodes[i];var id=node.id?node.id:generateId(node,tags);map[id] = node;node._i = i;node._id = id;indices.push(i);}return {'map':map,'indices':indices};}function generateId(node,tags){var tag=node.tagName?node.tagName:'x' + node.nodeType;if(!tags[tag]){tags[tag] = 0;}tags[tag]++;return tag + tags[tag];}function generateMoves(map,nodes,indices,base,reverse,index){var moves=[];var compare=[];var operateMap={};var tags={};for(var i=0,len=nodes.length;i < len;i++) {var node=nodes[reverse?nodes.length - i - 1:i],bound=base.childNodes[reverse?base.childNodes.length - indices[i] - 1:indices[i]],id=node.id?node.id:generateId(node,tags);if(operateMap[id]){continue;}var existing=map[id];if(existing){if(existing !== bound){var relativeBaseIndex=reverse?base.childNodes.length - existing._i - 1:existing._i;moves.push({'action':'moveChildElement','element':existing,'baseIndex':index + '>' + relativeBaseIndex,'sourceIndex':index + '>' + i});indices.splice(i,0,indices.splice(relativeBaseIndex,1)[0]);}if(!node.isEqualNode(existing)){compare.push([node,existing]);}}else {var inserted=node.cloneNode(true);var relativeBaseIndex=reverse?nodes.length - i - 1:i;moves.push({'action':'insertChildElement','element':inserted,'baseIndex':index + '>' + relativeBaseIndex,'sourceIndex':index + '>' + relativeBaseIndex});}operateMap[id] = true;}for(var i=0,len=base.childNodes.length;i < len;i++) {var remove=base.childNodes[i];var removeId=remove._id;if(!operateMap[removeId]){moves.push({'action':'removeChildElement','element':remove,'baseIndex':index + '>' + remove._i,'sourceIndex':null});}}return {'compare':compare,'diff':moves};};function diffString(source,base,index,baseElement){var o=base == ''?[]:base.split(/\s+/);var n=source == ''?[]:source.split(/\s+/);var ns=new Object();var os=new Object();for(var i=0;i < n.length;i++) {if(ns[n[i]] == null)ns[n[i]] = {rows:new Array(),o:null};ns[n[i]].rows.push(i);}for(var i=0;i < o.length;i++) {if(os[o[i]] == null)os[o[i]] = {rows:new Array(),n:null};os[o[i]].rows.push(i);}for(var i in ns) {if(ns[i].rows.length == 1 && typeof os[i] != 'undefined' && os[i].rows.length == 1){n[ns[i].rows[0]] = {text:n[ns[i].rows[0]],row:os[i].rows[0]};o[os[i].rows[0]] = {text:o[os[i].rows[0]],row:ns[i].rows[0]};}}for(var i=0;i < n.length - 1;i++) {if(n[i].text != null && n[i + 1].text == null && n[i].row + 1 < o.length && o[n[i].row + 1].text == null && n[i + 1] == o[n[i].row + 1]){n[i + 1] = {text:n[i + 1],row:n[i].row + 1};o[n[i].row + 1] = {text:o[n[i].row + 1],row:i + 1};}}for(var i=n.length - 1;i > 0;i--) {if(n[i].text != null && n[i - 1].text == null && n[i].row > 0 && o[n[i].row - 1].text == null && n[i - 1] == o[n[i].row - 1]){n[i - 1] = {text:n[i - 1],row:n[i].row - 1};o[n[i].row - 1] = {text:o[n[i].row - 1],row:i - 1};}}var oSpace=base.match(/\s+/g);if(oSpace == null){oSpace = [''];}else {oSpace.push('');}var nSpace=source.match(/\s+/g);if(nSpace == null){nSpace = [''];}else {nSpace.push('');}var changes=[];var baseIndex=0;if(n.length == 0){var deletedText='';for(var i=0;i < o.length;i++) {deletedText += o[i] + oSpace[i];baseIndex += o[i].length + oSpace[i].length;}if(o.length > 0){changes.push({'action':'deleteText','element':baseElement,'baseIndex':index,'sourceIndex':index,'_textStart':0,'_textEnd':baseIndex,'_deleted':deletedText,'_length':deletedText.length});}}else {var current=null;if(n[0].text == null){for(var i=0;i < o.length;i++) {if(o[i].text != null){if(current != null){changes.push(current);}current = null;continue;}if(current == null){current = {'action':'deleteText','element':baseElement,'baseIndex':index,'sourceIndex':index,'_textStart':baseIndex,'_textEnd':0,'_deleted':'','_length':0};}current['_deleted'] += o[i] + oSpace[i];current['_length'] = current['_deleted'].length;baseIndex += current['_length'];current['_textEnd'] = baseIndex;}if(current != null){changes.push(current);current = null;}}var k=0;for(var i=0;i < n.length;i++) {if(n[i].text == null){if(current != null && current['action'] === 'deleteText'){changes.push(current);current = null;}if(current == null){current = {'action':'insertText','element':baseElement,'baseIndex':index,'sourceIndex':index,'_textStart':baseIndex,'_textEnd':0,'_inserted':'','_length':0};}current['_inserted'] += n[i] + nSpace[i];current['_length'] = current['_inserted'].length;baseIndex += current['_length'];current['_textEnd'] = baseIndex;}else {baseIndex += n[i].text.length + nSpace[i].length;if(n[k].text == null){continue;}for(k = n[k].row + 1;k < o.length && o[k].text == null;k++) {if(current != null && current['action'] === 'insertText'){changes.push(current);current = null;}if(current == null){current = {'action':'deleteText','element':baseElement,'baseIndex':index,'sourceIndex':index,'_textStart':baseIndex,'_textEnd':0,'_deleted':'','_length':0};}current['_deleted'] += o[k] + oSpace[k];current['_length'] = current['_deleted'].length;baseIndex += current['_length'];current['_textEnd'] = baseIndex;}}}if(current != null){changes.push(current);current = null;}}return changes;};function diff(source,base,index){var diffActions=[];if(index == null){index = '0';}if(source.nodeType === base.nodeType && (source.nodeType === 3 || source.nodeType === 8)){if(base.nodeValue !== source.nodeValue){var textActions=diffString(source.nodeValue,base.nodeValue,index,base);if(textActions){for(var i=0;i < textActions.length;i++) {textActions[i]['element'] = base;}diffActions = diffActions.concat(textActions);}}return diffActions;}if(source.attributes && base.attributes){var attributes=source.attributes,value,name;for(var i=attributes.length;i--;) {value = attributes[i].nodeValue;name = attributes[i].nodeName;var val=base.getAttribute(name);if(val !== value){if(val == null){diffActions.push({'action':'setAttribute','name':name,'element':base,'baseIndex':index,'sourceIndex':index,'_inserted':value});}else {diffActions.push({'action':'setAttribute','name':name,'element':base,'baseIndex':index,'sourceIndex':index,'_deleted':val,'_inserted':value});}}}attributes = base.attributes;for(var i=attributes.length;i--;) {name = attributes[i].nodeName;if(source.getAttribute(name) === null){diffActions.push({'action':'removeAttribute','name':name,'baseIndex':index,'sourceIndex':index,'_deleted':attributes[i].nodeValue});}}}var compare=[];if(source.childNodes && base.childNodes){var mapResult=mapElements(base.childNodes),nodes=source.childNodes;var map=mapResult['map'];var indices=mapResult['indices'];var moves=generateMoves(map,nodes,indices.slice(0),base,false,index);if(moves['diff'].length > 1){var backwardMoves=generateMoves(map,nodes,indices.slice(0),base,true,index);if(backwardMoves['diff'].length < moves['diff'].length){moves = backwardMoves;}}diffActions = diffActions.concat(moves['diff']);compare = moves['compare'];}if(compare.length > 0){for(var i=0,len=compare.length;i < len;i++) {var sourceChildNode=compare[i][0];var baseChildNode=compare[i][1];var childDiffs=diff(sourceChildNode,baseChildNode,index + '>' + baseChildNode._i);if(childDiffs.length > 0){diffActions = diffActions.concat(childDiffs);}delete baseChildNode._i;delete baseChildNode._id;}}return diffActions;}function isEqualChange(change1,change2){return change1['baseIndex'] === change2['baseIndex'] && change1['sourceIndex'] === change2['sourceIndex'] && change1['action'] === change2['action'] && change1['name'] === change2['name'] && change1['_deleted'] === change2['_deleted'] && change1['_inserted'] === change2['_inserted'] && change1['element'] && change2['element'] && change1['element'].nodeType === change2['element'].nodeType && (change1['element'].nodeType === 3 && change2['element'].nodeType === 3 && change1['element'].nodeValue === change2['element'].nodeValue || change1['element'].isEqualNode(change2['element'])) && change1['_textStart'] === change2['_textStart'] && change1['_textEnd'] === change2['_textEnd'];}function isParentChange(changeChild,changeParent){return changeChild['baseIndex'].indexOf(changeParent['baseIndex']) === 0 && changeChild['baseIndex'] !== changeParent['baseIndex'];};function isOverlappingRanges(range1,range2){return Math.max(range1['_textEnd'],range2['_textEnd']) - Math.min(range1['_textStart'],range2['_textStart']) < range1['_length'] + range2['_length'];}function patch(theirs,mine){var conflicts=[];var changes=[];var theirChanges=theirs.slice(0);var myChanges=mine.slice(0);for(var i=0,len=theirChanges.length;i < len;i++) {var theirItem=theirChanges[i];var myItem,m=0,myLength=myChanges.length;for(;m < myLength;m++) {myItem = myChanges[m];var conflicted=false;if(theirItem['baseIndex'] === myItem['baseIndex']){if(isEqualChange(theirItem,myItem)){changes.push(myItem);break;}else {if((theirItem['action'] === 'deleteText' || theirItem['action'] === 'insertText') && (myItem['action'] === 'deleteText' || myItem['action'] === 'insertText')){if(isOverlappingRanges(theirItem,myItem)){conflicted = true;}}else {conflicted = true;}}}else {var isTheirsRemove=theirItem['action'] === 'removeChildElement';var isMineRemove=myItem['action'] === 'removeChildElement';conflicted = isParentChange(theirItem,myItem) && isMineRemove && !isTheirsRemove || isParentChange(myItem,theirItem) && !isMineRemove && isTheirsRemove;}if(conflicted){theirItem['_conflict'] = true;theirItem['_owner'] = 'theirs';if(!theirItem['_conflictedWith']){theirItem['_conflictedWith'] = [];}theirItem['_conflictedWith'].push(myItem);myItem['_conflict'] = true;myItem['_owner'] = 'mine';if(!myItem['_conflictedWith']){myItem['_conflictedWith'] = [];}myItem['_conflictedWith'].push(theirItem);if(conflicts.indexOf(theirItem) < 0){conflicts.push(theirItem);}if(conflicts.indexOf(myItem) < 0){conflicts.push(myItem);}}myItem = null;}if(!myItem && !theirItem['_conflict'] && changes.indexOf(theirItem) < 0){changes.push(theirItem);}}if(myChanges.length > 0){for(var i=0;i < myChanges.length;i++) {if(!myChanges[i]['_conflict'] && changes.indexOf(myChanges[i]) < 0){changes.push(myChanges[i]);}}}if(conflicts.length > 0){changes = changes.concat(conflicts);}changes.sort(sortChange);return changes;}function sortChange(a,b){if(a['sourceIndex'] === b['sourceIndex']){if(a['_textStart'] && b['_textStart']){return a['_textStart'] > b['_textStart']?1:-1;}return 0;}else if(!a['sourceIndex'] && b['sourceIndex']){return -1;}else if(a['sourceIndex'] && !b['sourceIndex']){return 1;}var aIndices=a['sourceIndex'].split('>');var bIndices=b['sourceIndex'].split('>');var equal=true;var i=0;while(equal && i < aIndices.length && i < bIndices.length) {var aN=parseInt(aIndices[i],10);var bN=parseInt(bIndices[i],10);if(aN === bN){i++;continue;}else if(isNaN(aN) || isNaN(bN)){return isNaN(aN)?1:-1;}else {return aN > bN?1:-1;}}return 0;}var findChildAtIndex=function findChildAtIndex(node,index){if(!index || !node.childNodes || node.childNodes.length === 0){return null;}var result={};var indices=index.split('>');var found=true;var lastParentIndex='';for(var i=1,len=indices.length;i < len;i++) {var nodeIndex=parseInt(indices[i],10);if(node.childNodes && node.childNodes.length > nodeIndex){node = node.childNodes[nodeIndex];}else {lastParentIndex = indices.slice(0,i - 1).join('>');found = false;break;}}result['lastParent'] = found?node.parentNode:node;result['lastParentIndex'] = found?index.slice(0,index.lastIndexOf('>')):lastParentIndex;result['node'] = found?node:null;result['found'] = found;return result;};function resolve(conflict,base,owner){if(conflict[owner]){return apply(conflict[owner],base,true);}return null;};function apply(changes,base,force,showChanges){var unapplied=[];var moves=[];var removals=[];var conflictChanges=[];var textChanges={};for(var c=0,cLen=changes.length;c < cLen;c++) {var change=changes[c];var action=change['action'];var baseIndex=change['baseIndex'];var sourceIndex=change['sourceIndex'];var baseReference=change['_baseReference'];var sourceReference=change['_sourceReference'];if(change['_conflict'] && !force){change['_baseReference'] = findChildAtIndex(base,baseIndex);if(sourceIndex && baseIndex !== sourceIndex){change['_sourceReference'] = findChildAtIndex(base,sourceIndex);}conflictChanges.push(change);continue;}var node=null;var findBaseChildResult=baseReference;if(findBaseChildResult == null){findBaseChildResult = findChildAtIndex(base,baseIndex);if(findBaseChildResult == null){unapplied.push(change);continue;}}var node=findBaseChildResult['node'];if(!findBaseChildResult['found']){if(action === 'insertChildElement'){var lastParent=findBaseChildResult['lastParent'];var insertion=change['element'];if(showChanges){var insNode=document.createElement('ins');ins.appendChild(insertion);insertion = ins;}moves.push({'parent':lastParent,'insertion':insertion,'source':null,'change':change,'appendOnly':false});}else {unapplied.push(change);}continue;}if(node === null){continue;}if(action === 'moveChildElement' || action === 'insertChildElement'){var sourceNode=node;if(sourceIndex !== baseIndex){var findSourceChildResult=sourceReference;if(findSourceChildResult == null){findSourceChildResult = findChildAtIndex(base,sourceIndex);}sourceNode = findSourceChildResult !== null?findSourceChildResult['node']:null;}if(action === 'moveChildElement'){moves.push({'parent':node.parentNode,'insertion':node,'source':sourceNode,'change':change,'appendOnly':false});}else {var insertion=change['element'];if(showChanges){var insNode=document.createElement('ins');insNode.appendChild(insertion);insertion = insNode;}moves.push({'parent':node.parentNode,'insertion':insertion,'source':sourceNode,'change':change,'appendOnly':false});}}else if(action === 'removeChildElement'){if(showChanges){var delNode=document.createElement('del');delNode.appendChild(node.cloneNode(true));moves.push({'parent':node.parentNode,'insertion':delNode,'source':null,'change':change,'appendOnly':true});}removals.push([node.parentNode,node]);}else if(action === 'deleteText' || action === 'insertText'){var existingOp=textChanges[change['baseIndex']];if(!existingOp){existingOp = {'parent':node.parentNode,'source':node,'changes':[]};}existingOp['changes'].push(change);textChanges[change['baseIndex']] = existingOp;}else if(action === 'replaceText'){if(!showChanges){node.nodeValue = change['_inserted'];}else {var deletionNode=document.createElement('del');deletionNode.appendChild(document.createTextNode(change['_deleted']));var insertionNode=document.createElement('ins');insertionNode.appendChild(document.createTextNode(change['_inserted']));moves.push({'parent':node.parentNode,'insertion':deletionNode,'source':node,'change':change,'appendOnly':false});moves.push({'parent':node.parentNode,'insertion':insertionNode,'source':node,'change':change,'appendOnly':false});node.nodeValue = '';}}else if(action === 'setAttribute'){node.setAttribute(change['name'],change['_inserted']);}else if(action === 'removeAttribute'){node.removeAttribute(change['name']);}}moves.sort(function(a,b){return sortChange(a['change'],b['change']);});for(var i=0,len=moves.length;i < len;i++) {var move=moves[i];var parent=move['parent'],insertion=move['insertion'],source=move['source'],change=move['change'],appendOnly=move['appendOnly'];if(source === null && !appendOnly){var sourceIndex=change['sourceIndex'];if(sourceIndex){var lastIndexStr=sourceIndex.substr(sourceIndex.lastIndexOf('>') + 1,sourceIndex.length);var childIndex=parseInt(lastIndexStr,10);if(parent.childNodes && parent.childNodes.length > childIndex){source = parent.childNodes[childIndex];}}}parent.insertBefore(insertion,source);}for(var i=0;i < removals.length;i++) {var removal=removals[i];removal[0].removeChild(removal[1]);}for(var b in textChanges) {var nodeChanges=textChanges[b];var node=nodeChanges['source'];var value=node.nodeValue;var nodeOps=nodeChanges['changes'];nodeOps.sort(function(a,b){return a['_textStart'] > b['_textStart']?1:-1;});var newStr='';var valueIndex=0;for(var i=0;i < nodeOps.length;i++) {var op=nodeOps[i];if(op['action'] === 'insertText'){newStr += value.substr(valueIndex,op['_textStart']);if(showChanges){newStr += '<ins>' + escape(op['_inserted']) + '</ins>';}else {newStr += op['_inserted'];}if(valueIndex === op['_textStart']){newStr += value.substr(valueIndex,op['_textEnd']);}}else {newStr += value.substr(valueIndex,op['_textStart']);if(!!showChanges){newStr += '<del>' + escape(op['_deleted']) + '</del>';}}valueIndex = op['_textEnd'];}newStr += value.substr(valueIndex);if(!showChanges){node.nodeValue = newStr;}else {node.innerHTML = newStr;}}var conflicts=[];while(conflictChanges.length > 0) {var change=conflictChanges.pop();var conflict={'mine':[],'theirs':[]};conflict[change['_owner']].push(change);if(change['_conflictedWith']){var conflictedWithChange=change['_conflictedWith'];if(conflictedWithChange){for(var k=0;k < conflictedWithChange.length;k++) {var conflictedWithItem=conflictedWithChange[k];var i=conflictChanges.indexOf(conflictedWithItem);if(i > -1){conflictChanges.splice(i,1);conflict[conflictedWithItem['_owner']].push(conflictedWithItem);}if(conflictedWithItem['_conflictedWith']){for(var s=0;s < conflictedWithItem['_conflictedWith'].length;s++) {var item=conflictedWithItem['_conflictedWith'][s];var i=conflictChanges.indexOf(item);if(i > -1){conflictChanges.splice(i,1);conflict[item['_owner']].push(item);}delete item['_conflictedWith'];}}delete conflictedWithItem['_conflictedWith'];}delete change['_conflictedWith'];}}conflicts.push(conflict);}return {'unapplied':unapplied,'conflicts':conflicts};}exports.diff = diff;exports.diffString = diffString;exports.patch = patch;exports.apply = apply;exports.resolve = resolve;exports.isEqualChange = isEqualChange;exports.isParentChange = isParentChange;exports.sortChange = sortChange;

